"""init

Revision ID: 0aa0729135db
Revises: 1b5af7ba2dd1
Create Date: 2024-04-19 16:56:25.792660

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = "0aa0729135db"
down_revision = "1b5af7ba2dd1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_permission",
        sa.Column("auth_permission_id", sa.Integer(), nullable=False),
        sa.Column("auth_permission_code", sa.String(length=30), nullable=False),
        sa.Column("auth_permission_description", sa.String(length=1000), nullable=True),
        sa.PrimaryKeyConstraint("auth_permission_id"),
        sa.UniqueConstraint("auth_permission_code"),
        schema="auth",
    )
    op.create_table(
        "auth_role",
        sa.Column("auth_role_id", sa.Integer(), nullable=False),
        sa.Column("auth_role_code", sa.String(length=30), nullable=False),
        sa.Column("auth_role_label", sa.String(length=100), nullable=False),
        sa.Column("auth_role_description", sa.String(length=1000), nullable=True),
        sa.PrimaryKeyConstraint("auth_role_id"),
        sa.UniqueConstraint("auth_role_code"),
        schema="auth",
    )
    op.create_table(
        "auth_user",
        sa.Column("auth_user_id", sa.Integer(), nullable=False),
        sa.Column("user_type_code", sa.String(length=30), nullable=False),
        sa.Column("user_name", sa.String(length=100), nullable=False),
        sa.Column("hashed_password", sa.LargeBinary(), nullable=True),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("email_address", sa.String(length=100), nullable=False),
        sa.Column("avatar", sa.String(length=1000), nullable=True),
        sa.Column("password_last_changed_dt", sa.DateTime(), nullable=True),
        sa.Column("manager_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("auth_user_id"),
        sa.UniqueConstraint("user_name"),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["auth.auth_user.auth_user_id"],
        ),
        schema="auth",
    )
    op.create_table(
        "auth_user_password_history",
        sa.Column("auth_user_password_history_id", sa.Integer(), nullable=False),
        sa.Column("auth_user_id", sa.Integer(), nullable=False),
        sa.Column("hashed_password", sa.LargeBinary(), nullable=False),
        sa.Column("created_dts", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("auth_user_password_history_id"),
        sa.ForeignKeyConstraint(
            ["auth_user_id"],
            ["auth.auth_user.auth_user_id"],
        ),
        schema="auth",
    )
    op.create_table(
        "config_age_band_set",
        sa.Column("config_age_band_set_id", sa.Integer(), nullable=False),
        sa.Column("config_age_band_set_label", sa.String(length=100), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("config_age_band_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_age_band_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_age_band_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_age_band_set_history))"
    )
    op.create_table(
        "config_age_distribution_set",
        sa.Column("config_age_distribution_set_id", sa.Integer(), nullable=False),
        sa.Column(
            "config_age_distribution_set_label", sa.String(length=100), nullable=True
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("config_age_distribution_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_age_distribution_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_age_distribution_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_age_distribution_set_history))"
    )
    op.create_table(
        "config_attr_set",
        sa.Column("config_attr_set_id", sa.Integer(), nullable=False),
        sa.Column("config_attr_set_code", sa.String(length=30), nullable=False),
        sa.Column("config_attr_set_label", sa.String(length=100), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("config_attr_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_attr_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_attr_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_attr_set_history))"
    )
    op.create_table(
        "config_dropdown_set",
        sa.Column("config_dropdown_set_id", sa.Integer(), nullable=False),
        sa.Column("config_dropdown_set_label", sa.String(length=100), nullable=False),
        sa.Column("is_numeric", sa.Boolean(), nullable=True),
        sa.Column("detail_display_strategy_code", sa.String(length=30), nullable=False),
        sa.Column("sort_by_code", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("config_dropdown_set_id"),
        sa.UniqueConstraint("config_dropdown_set_label"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_dropdown_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_dropdown_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_dropdown_set_history))"
    )
    op.create_table(
        "config_plan_design_set",
        sa.Column("config_plan_design_set_id", sa.Integer(), nullable=False),
        sa.Column("config_parent_id", sa.Integer(), nullable=False),
        sa.Column("config_parent_type_code", sa.String(length=50), nullable=False),
        sa.Column(
            "config_plan_design_set_label", sa.String(length=100), nullable=False
        ),
        sa.Column(
            "config_plan_design_set_description", sa.String(length=1000), nullable=True
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("config_plan_design_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_plan_design_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_plan_design_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_plan_design_set_history))"
    )
    op.create_table(
        "event_log",
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("event_type_code", sa.String(length=100), nullable=False),
        sa.Column("event_payload", sa.NVARCHAR(), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("event_id"),
        schema="dbo",
    )
    op.create_table(
        "ref_master",
        sa.Column("ref_id", sa.Integer(), nullable=False),
        sa.Column("ref_entity_code", sa.String(length=30), nullable=False),
        sa.Column("ref_attr_code", sa.String(length=30), nullable=False),
        sa.Column("ref_attr_label", sa.String(length=100), nullable=False),
        sa.Column("ref_attr_description", sa.String(length=1000), nullable=True),
        sa.Column("ref_attr_symbol", sa.String(length=30), nullable=True),
        sa.Column("ref_attr_value", sa.Float(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("ref_id"),
        sa.UniqueConstraint("ref_entity_code", "ref_attr_code"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.ref_master ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.ref_master SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.ref_master_history))"
    )
    op.create_table(
        "ref_states",
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("state_code", sa.String(length=2), nullable=False),
        sa.Column("state_name", sa.String(length=100), nullable=False),
        sa.Column("svg_path", sa.VARCHAR(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("state_id"),
        sa.UniqueConstraint("state_code"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.ref_states ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.ref_states SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.ref_states_history))"
    )
    op.create_table(
        "testtbl",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("asofdts", mssql.DATETIME2(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="dbo",
    )
    op.create_table(
        "auth_role_permission",
        sa.Column("auth_role_permission_id", sa.Integer(), nullable=False),
        sa.Column("auth_role_id", sa.Integer(), nullable=True),
        sa.Column("auth_permission_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auth_permission_id"],
            ["auth.auth_permission.auth_permission_id"],
        ),
        sa.ForeignKeyConstraint(
            ["auth_role_id"],
            ["auth.auth_role.auth_role_id"],
        ),
        sa.PrimaryKeyConstraint("auth_role_permission_id"),
        sa.UniqueConstraint("auth_permission_id", "auth_role_id"),
        schema="auth",
    )
    op.create_table(
        "auth_user_role",
        sa.Column("auth_user_role_id", sa.Integer(), nullable=False),
        sa.Column("auth_user_id", sa.Integer(), nullable=True),
        sa.Column("auth_role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auth_role_id"],
            ["auth.auth_role.auth_role_id"],
        ),
        sa.ForeignKeyConstraint(
            ["auth_user_id"],
            ["auth.auth_user.auth_user_id"],
        ),
        sa.PrimaryKeyConstraint("auth_user_role_id"),
        sa.UniqueConstraint("auth_user_id", "auth_role_id"),
        schema="auth",
    )
    op.create_table(
        "config_age_band_detail",
        sa.Column("config_age_band_detail_id", sa.Integer(), nullable=False),
        sa.Column("config_age_band_set_id", sa.Integer(), nullable=True),
        sa.Column("age_band_lower", sa.Integer(), nullable=False),
        sa.Column("age_band_upper", sa.Integer(), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint("age_band_lower <= age_band_upper"),
        sa.ForeignKeyConstraint(
            ["config_age_band_set_id"],
            ["dbo.config_age_band_set.config_age_band_set_id"],
        ),
        sa.PrimaryKeyConstraint("config_age_band_detail_id"),
        sa.UniqueConstraint("config_age_band_set_id", "age_band_lower"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_age_band_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_age_band_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_age_band_detail_history))"
    )
    op.create_table(
        "config_age_distribution_detail",
        sa.Column("config_age_distribution_id", sa.Integer(), nullable=False),
        sa.Column("config_age_distribution_set_id", sa.Integer(), nullable=True),
        sa.Column("age_value", sa.Integer(), nullable=False),
        sa.Column("rate_table_age_value", sa.Integer(), nullable=False),
        sa.Column("weight", sa.Numeric(precision=12, scale=5), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_age_distribution_set_id"],
            ["dbo.config_age_distribution_set.config_age_distribution_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_age_distribution_id"),
        sa.UniqueConstraint("config_age_distribution_set_id", "age_value"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_age_distribution_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_age_distribution_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_age_distribution_detail_history))"
    )
    op.create_table(
        "config_attr_detail",
        sa.Column("config_attr_detail_id", sa.Integer(), nullable=False),
        sa.Column("config_attr_set_id", sa.Integer(), nullable=True),
        sa.Column("config_attr_detail_code", sa.String(length=30), nullable=False),
        sa.Column("config_attr_detail_label", sa.String(length=100), nullable=True),
        sa.Column("is_composite_id", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_attr_set_id"],
            ["dbo.config_attr_set.config_attr_set_id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_attr_detail_id"),
        sa.UniqueConstraint("config_attr_set_id", "config_attr_detail_code"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_attr_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_attr_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_attr_detail_history))"
    )
    op.create_table(
        "config_dropdown_detail",
        sa.Column("config_dropdown_detail_id", sa.Integer(), nullable=False),
        sa.Column("config_dropdown_set_id", sa.Integer(), nullable=True),
        sa.Column("config_dropdown_detail_code", sa.String(length=30), nullable=False),
        sa.Column(
            "config_dropdown_detail_label", sa.String(length=100), nullable=False
        ),
        sa.Column("is_restricted", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_dropdown_set_id"],
            ["dbo.config_dropdown_set.config_dropdown_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_dropdown_detail_id"),
        sa.UniqueConstraint("config_dropdown_set_id", "config_dropdown_detail_code"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_dropdown_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_dropdown_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_dropdown_detail_history))"
    )
    op.create_table(
        "config_plan_design_detail",
        sa.Column("config_plan_design_detail_id", sa.Integer(), nullable=False),
        sa.Column("config_plan_design_set_id", sa.Integer(), nullable=False),
        sa.Column("config_parent_type_code", sa.String(length=50), nullable=False),
        sa.Column("config_parent_id", sa.Integer(), nullable=False),
        sa.Column("default_value", sa.Numeric(precision=12, scale=2), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_plan_design_set_id"],
            ["dbo.config_plan_design_set.config_plan_design_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_plan_design_detail_id"),
        sa.UniqueConstraint(
            "config_plan_design_set_id", "config_parent_type_code", "config_parent_id"
        ),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_plan_design_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_plan_design_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_plan_design_detail_history))"
    )
    op.create_table(
        "config_rating_mapper_collection",
        sa.Column("config_rating_mapper_collection_id", sa.Integer(), nullable=False),
        sa.Column("config_attribute_set_id", sa.Integer(), nullable=True),
        sa.Column(
            "config_rating_mapper_collection_label",
            sa.String(length=100),
            nullable=True,
        ),
        sa.Column("rating_strategy_id", sa.Integer(), nullable=True),
        sa.Column("default_config_rating_mapper_set_id", sa.Integer(), nullable=True),
        sa.Column("is_selectable", sa.Boolean(), nullable=True),
        sa.Column("can_override_distribution", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_attribute_set_id"],
            ["dbo.config_attr_set.config_attr_set_id"],
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["rating_strategy_id"], ["dbo.ref_master.ref_id"], ondelete="NO ACTION"
        ),
        sa.PrimaryKeyConstraint("config_rating_mapper_collection_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_collection ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_collection SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_rating_mapper_collection_history))"
    )
    op.create_table(
        "config_dropdown_detail_acl",
        sa.Column("config_dropdown_detail_acl_id", sa.Integer(), nullable=False),
        sa.Column("config_dropdown_detail_id", sa.Integer(), nullable=True),
        sa.Column("auth_role_code", sa.String(length=30), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_dropdown_detail_id"],
            ["dbo.config_dropdown_detail.config_dropdown_detail_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_dropdown_detail_acl_id"),
        schema="dbo",
        info={"rls": "user_role"},
    )
    op.execute(
        "ALTER TABLE dbo.config_dropdown_detail_acl ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_dropdown_detail_acl SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_dropdown_detail_acl_history))"
    )
    op.execute(
        "CREATE SECURITY POLICY rls.policy_rls__config_dropdown_detail_acl\n                ADD FILTER PREDICATE rls.fn_rls__user_role(auth_role_code) ON dbo.config_dropdown_detail_acl\n                WITH (STATE = ON)"
    )
    op.create_table(
        "config_product",
        sa.Column("config_product_id", sa.Integer(), nullable=False),
        sa.Column("config_product_code", sa.String(length=30), nullable=False),
        sa.Column("config_product_label", sa.String(length=100), nullable=False),
        sa.Column("config_product_effective_date", sa.Date(), nullable=False),
        sa.Column("config_product_expiration_date", sa.Date(), nullable=True),
        sa.Column("product_issue_date", sa.Date(), nullable=True),
        sa.Column("master_product_code", sa.String(length=30), nullable=True),
        sa.Column("form_code", sa.String(length=30), nullable=True),
        sa.Column("default_plan_design_set_id", sa.Integer(), nullable=True),
        sa.Column(
            "age_rating_strategy_id",
            sa.Integer(),
            nullable=True,
            comment="Indicates whether age is used for rating, underwriting, or not at all. Allows for other strategies to be created.",
        ),
        sa.Column(
            "age_distribution_set_id",
            sa.Integer(),
            nullable=True,
            comment="Default distribution of ages at issue",
        ),
        sa.Column(
            "rating_mapper_collection_id1",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id2",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id3",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id4",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id5",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id6",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column("allow_employer_paid", sa.Boolean(), nullable=True),
        sa.Column(
            "voluntary_census_strategy_id",
            sa.Integer(),
            nullable=True,
            comment="Indicates a specific strategy for handling custom censuses for voluntary quotes",
        ),
        sa.Column(
            "employer_paid_census_strategy_id",
            sa.Integer(),
            nullable=True,
            comment="Indicates a specific strategy for handling custom censuses for employer paid quotes",
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["age_distribution_set_id"],
            ["dbo.config_age_distribution_set.config_age_distribution_set_id"],
        ),
        sa.ForeignKeyConstraint(
            ["age_rating_strategy_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.ForeignKeyConstraint(
            ["employer_paid_census_strategy_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id1"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id2"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id3"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id4"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id5"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id6"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["voluntary_census_strategy_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.PrimaryKeyConstraint("config_product_id"),
        sa.UniqueConstraint("config_product_code", "config_product_effective_date"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_product ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_product SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_product_history))"
    )
    op.create_table(
        "config_rating_mapper_set",
        sa.Column("config_rating_mapper_set_id", sa.Integer(), nullable=False),
        sa.Column(
            "config_rating_mapper_set_label", sa.String(length=255), nullable=False
        ),
        sa.Column("config_rating_mapper_collection_id", sa.Integer(), nullable=True),
        sa.Column("is_composite", sa.Boolean(), nullable=True),
        sa.Column("is_employer_paid", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_rating_mapper_collection_id"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.PrimaryKeyConstraint("config_rating_mapper_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_rating_mapper_set_history))"
    )
    op.create_table(
        "config_coverage",
        sa.Column("config_coverage_id", sa.Integer(), nullable=False),
        sa.Column("config_product_id", sa.Integer(), nullable=False),
        sa.Column("config_coverage_code", sa.String(length=30), nullable=False),
        sa.Column("config_coverage_label", sa.String(length=100), nullable=False),
        sa.Column(
            "config_coverage_description", sa.String(length=1000), nullable=False
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_product_id"],
            ["dbo.config_product.config_product_id"],
        ),
        sa.PrimaryKeyConstraint("config_coverage_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_coverage ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_coverage SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_coverage_history))"
    )
    op.create_table(
        "config_product_state",
        sa.Column("config_product_state_id", sa.Integer(), nullable=False),
        sa.Column("config_product_id", sa.Integer(), nullable=True),
        sa.Column("state_id", sa.Integer(), nullable=True),
        sa.Column("config_product_state_effective_date", sa.Date(), nullable=False),
        sa.Column("config_product_state_expiration_date", sa.Date(), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint(
            "config_product_state_effective_date <= config_product_state_expiration_date"
        ),
        sa.ForeignKeyConstraint(
            ["config_product_id"],
            ["dbo.config_product.config_product_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["state_id"],
            ["dbo.ref_states.state_id"],
        ),
        sa.PrimaryKeyConstraint("config_product_state_id"),
        sa.UniqueConstraint("config_product_id", "state_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_product_state ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_product_state SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_product_state_history))"
    )
    op.create_table(
        "config_product_variation",
        sa.Column("config_product_variation_id", sa.Integer(), nullable=False),
        sa.Column("config_product_id", sa.Integer(), nullable=True),
        sa.Column(
            "config_product_variation_code", sa.String(length=30), nullable=False
        ),
        sa.Column(
            "config_product_variation_label", sa.String(length=100), nullable=False
        ),
        sa.Column("default_plan_design_set_id", sa.Integer(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_product_id"],
            ["dbo.config_product.config_product_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["default_plan_design_set_id"],
            ["dbo.config_plan_design_set.config_plan_design_set_id"],
            onupdate="SET NULL",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("config_product_variation_id"),
        sa.UniqueConstraint("config_product_id", "config_product_variation_code"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_product_variation ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_product_variation SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_product_variation_history))"
    )
    with op.batch_alter_table("config_product_variation", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_config_product_variation_config_product_id"),
            ["config_product_id"],
            unique=False,
        )

    op.create_table(
        "config_provision",
        sa.Column("config_provision_id", sa.Integer(), nullable=False),
        sa.Column("config_product_id", sa.Integer(), nullable=False),
        sa.Column("config_provision_code", sa.String(length=30), nullable=False),
        sa.Column("config_provision_label", sa.String(length=100), nullable=False),
        sa.Column("config_provision_data_type_id", sa.Integer(), nullable=False),
        sa.Column("config_dropdown_set_id", sa.Integer(), nullable=True),
        sa.Column(
            "config_provision_description", sa.String(length=1000), nullable=True
        ),
        sa.Column("default_value", sa.String(length=100), nullable=True),
        sa.Column("is_default_related_attribute", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_dropdown_set_id"],
            ["dbo.config_dropdown_set.config_dropdown_set_id"],
            onupdate="SET NULL",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["config_product_id"],
            ["dbo.config_product.config_product_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_provision_data_type_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.PrimaryKeyConstraint("config_provision_id"),
        sa.UniqueConstraint("config_product_id", "config_provision_code"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_provision ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_provision SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_provision_history))"
    )
    op.create_table(
        "config_rate_group",
        sa.Column("config_rate_group_id", sa.Integer(), nullable=False),
        sa.Column("config_product_id", sa.Integer(), nullable=False),
        sa.Column("config_rate_group_code", sa.String(length=30), nullable=False),
        sa.Column("config_rate_group_label", sa.String(length=100), nullable=False),
        sa.Column("unit_value", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("apply_discretionary_factor", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_product_id"],
            ["dbo.config_product.config_product_id"],
        ),
        sa.PrimaryKeyConstraint("config_rate_group_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_rate_group ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_rate_group SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_rate_group_history))"
    )
    op.create_table(
        "config_rating_mapper_detail",
        sa.Column("config_rating_mapper_detail_id", sa.Integer(), nullable=False),
        sa.Column("config_rating_mapper_set_id", sa.Integer(), nullable=True),
        sa.Column("rate_table_attribute_detail_id", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id", sa.Integer(), nullable=True),
        sa.Column("weight", sa.Numeric(precision=8, scale=5), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_rating_mapper_set_id"],
            ["dbo.config_rating_mapper_set.config_rating_mapper_set_id"],
        ),
        sa.ForeignKeyConstraint(
            ["output_attribute_detail_id"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rate_table_attribute_detail_id"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
        ),
        sa.PrimaryKeyConstraint("config_rating_mapper_detail_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_rating_mapper_detail_history))"
    )
    op.create_table(
        "config_benefit",
        sa.Column("config_benefit_id", sa.Integer(), nullable=False),
        sa.Column("config_product_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_code", sa.String(length=30), nullable=False),
        sa.Column("config_benefit_label", sa.String(length=100), nullable=False),
        sa.Column("config_coverage_id", sa.Integer(), nullable=False),
        sa.Column("config_rate_group_id", sa.Integer(), nullable=True),
        sa.Column("unit_type_id", sa.Integer(), nullable=True),
        sa.Column("config_benefit_description", sa.String(length=1000), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_coverage_id"],
            ["dbo.config_coverage.config_coverage_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["config_product_id"],
            ["dbo.config_product.config_product_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["config_rate_group_id"],
            ["dbo.config_rate_group.config_rate_group_id"],
        ),
        sa.ForeignKeyConstraint(
            ["unit_type_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.PrimaryKeyConstraint("config_benefit_id"),
        sa.UniqueConstraint("config_product_id", "config_benefit_code"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_history))"
    )
    op.create_table(
        "config_factor_set",
        sa.Column("config_factor_set_id", sa.Integer(), nullable=False),
        sa.Column("config_provision_id", sa.Integer(), nullable=True),
        sa.Column("factor_priority", sa.Integer(), nullable=False),
        sa.Column("vary_by_rating_age", sa.Boolean(), nullable=True),
        sa.Column("vary_by_rating_attr1", sa.Boolean(), nullable=True),
        sa.Column("vary_by_rating_attr2", sa.Boolean(), nullable=True),
        sa.Column("vary_by_rating_attr3", sa.Boolean(), nullable=True),
        sa.Column("vary_by_rating_attr4", sa.Boolean(), nullable=True),
        sa.Column("vary_by_rating_attr5", sa.Boolean(), nullable=True),
        sa.Column("vary_by_rating_attr6", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision.config_provision_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_factor_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_factor_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_factor_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_factor_set_history))"
    )
    op.create_table(
        "config_product_variation_state",
        sa.Column("config_product_variation_state_id", sa.Integer(), nullable=False),
        sa.Column("config_product_variation_id", sa.Integer(), nullable=True),
        sa.Column("state_id", sa.Integer(), nullable=True),
        sa.Column(
            "config_product_variation_state_effective_date", sa.Date(), nullable=False
        ),
        sa.Column(
            "config_product_variation_state_expiration_date", sa.Date(), nullable=False
        ),
        sa.Column("default_config_age_band_set_id", sa.Integer(), nullable=True),
        sa.Column("default_plan_design_set_id", sa.Integer(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint(
            "config_product_variation_state_effective_date <= config_product_variation_state_expiration_date"
        ),
        sa.ForeignKeyConstraint(
            ["config_product_variation_id"],
            ["dbo.config_product_variation.config_product_variation_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["default_config_age_band_set_id"],
            ["dbo.config_age_band_set.config_age_band_set_id"],
            onupdate="SET NULL",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["default_plan_design_set_id"],
            ["dbo.config_plan_design_set.config_plan_design_set_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["state_id"],
            ["dbo.ref_states.state_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.PrimaryKeyConstraint("config_product_variation_state_id"),
        sa.UniqueConstraint(
            "config_product_variation_id",
            "state_id",
            "config_product_variation_state_effective_date",
        ),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_product_variation_state ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_product_variation_state SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_product_variation_state_history))"
    )
    op.create_table(
        "config_provision_state",
        sa.Column("config_provision_state_id", sa.Integer(), nullable=False),
        sa.Column("config_provision_id", sa.Integer(), nullable=False),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("config_provision_state_effective_date", sa.Date(), nullable=False),
        sa.Column("config_provision_state_expiration_date", sa.Date(), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint(
            "config_provision_state_effective_date <= config_provision_state_expiration_date"
        ),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision.config_provision_id"],
        ),
        sa.ForeignKeyConstraint(
            ["state_id"],
            ["dbo.ref_states.state_id"],
        ),
        sa.PrimaryKeyConstraint("config_provision_state_id"),
        sa.UniqueConstraint(
            "config_provision_id", "state_id", "config_provision_state_effective_date"
        ),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_provision_state ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_provision_state SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_provision_state_history))"
    )
    op.create_table(
        "config_provision_ui",
        sa.Column("config_provision_id", sa.Integer(), nullable=False),
        sa.Column("component_type_code", sa.String(length=50), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision.config_provision_id"],
        ),
        sa.PrimaryKeyConstraint("config_provision_id"),
        sa.UniqueConstraint("config_provision_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_provision_ui ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_provision_ui SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_provision_ui_history))"
    )
    op.create_table(
        "config_benefit_auth",
        sa.Column("config_benefit_auth_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_id", sa.Integer(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("min_value", sa.Numeric(precision=12, scale=2), nullable=True),
        sa.Column("max_value", sa.Numeric(precision=12, scale=2), nullable=True),
        sa.Column("step_value", sa.Numeric(precision=12, scale=4), nullable=True),
        sa.Column("default_value", sa.Numeric(precision=12, scale=4), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_id"],
            ["dbo.config_benefit.config_benefit_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_benefit_auth_id"),
        sa.UniqueConstraint("config_benefit_id", "priority"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_auth ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_auth SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_auth_history))"
    )
    op.create_table(
        "config_benefit_duration_set",
        sa.Column("config_benefit_duration_set_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_id", sa.Integer(), nullable=False),
        sa.Column(
            "config_benefit_duration_set_code", sa.String(length=30), nullable=False
        ),
        sa.Column(
            "config_benefit_duration_set_label", sa.String(length=100), nullable=False
        ),
        sa.Column(
            "default_config_benefit_duration_detail_id", sa.Integer(), nullable=True
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_id"],
            ["dbo.config_benefit.config_benefit_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_benefit_duration_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_duration_set_history))"
    )
    op.create_table(
        "config_benefit_provision",
        sa.Column("config_benefit_provision_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_id", sa.Integer(), nullable=False),
        sa.Column("config_provision_id", sa.Integer(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_id"],
            ["dbo.config_benefit.config_benefit_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision.config_provision_id"],
        ),
        sa.PrimaryKeyConstraint("config_benefit_provision_id"),
        sa.UniqueConstraint("config_benefit_id", "config_provision_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_provision ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_provision SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_provision_history))"
    )
    op.create_table(
        "config_factor",
        sa.Column("config_factor_id", sa.Integer(), nullable=False),
        sa.Column("config_factor_set_id", sa.Integer(), nullable=True),
        sa.Column("rate_table_age_value", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id1", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id2", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id3", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id4", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id5", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id6", sa.Integer(), nullable=True),
        sa.Column("factor_value", sa.Numeric(precision=8, scale=5), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_factor_set_id"],
            ["dbo.config_factor_set.config_factor_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_factor_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_factor ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_factor SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_factor_history))"
    )
    op.create_table(
        "config_factor_rule",
        sa.Column("config_factor_rule_id", sa.Integer(), nullable=False),
        sa.Column("config_factor_set_id", sa.Integer(), nullable=True),
        sa.Column(
            "comparison_attr_name",
            sa.String(length=1000),
            nullable=False,
            comment="Column name of the column that is being compared",
        ),
        sa.Column(
            "comparison_operator_id",
            sa.Integer(),
            nullable=False,
            comment="Pythonic comparison operators, such as __eq__, __gt__, etc.",
        ),
        sa.Column("comparison_attr_value", sa.String(length=100), nullable=False),
        sa.Column(
            "comparison_attr_data_type_id",
            sa.Integer(),
            nullable=False,
            comment="Javascript data types, such as string, number, and boolean",
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["comparison_attr_data_type_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.ForeignKeyConstraint(
            ["comparison_operator_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_factor_set_id"],
            ["dbo.config_factor_set.config_factor_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_factor_rule_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_factor_rule ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_factor_rule SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_factor_rule_history))"
    )
    op.create_table(
        "config_plan_design_variation_state",
        sa.Column(
            "config_plan_design_variation_state_id", sa.Integer(), nullable=False
        ),
        sa.Column("config_product_variation_state_id", sa.Integer(), nullable=False),
        sa.Column("config_plan_design_set_id", sa.Integer(), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_plan_design_set_id"],
            ["dbo.config_plan_design_set.config_plan_design_set_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_product_variation_state_id"],
            ["dbo.config_product_variation_state.config_product_variation_state_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_plan_design_variation_state_id"),
        sa.UniqueConstraint(
            "config_product_variation_state_id", "config_plan_design_set_id"
        ),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_plan_design_variation_state ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_plan_design_variation_state SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_plan_design_variation_state_history))"
    )
    op.create_table(
        "config_provision_ui__checkbox",
        sa.Column("config_provision_id", sa.Integer(), nullable=False),
        sa.Column("is_switch", sa.Boolean(), nullable=True),
        sa.Column("default_value", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision_ui.config_provision_id"],
        ),
        sa.PrimaryKeyConstraint("config_provision_id"),
        schema="dbo",
    )
    op.create_table(
        "config_provision_ui__input",
        sa.Column("config_provision_id", sa.Integer(), nullable=False),
        sa.Column("input_type_id", sa.Integer(), nullable=True),
        sa.Column("min_value", sa.Float(), nullable=True),
        sa.Column("max_value", sa.Float(), nullable=True),
        sa.Column("step_value", sa.Float(), nullable=True),
        sa.Column("min_length", sa.Integer(), nullable=True),
        sa.Column("max_length", sa.Integer(), nullable=True),
        sa.Column("placeholder", sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision_ui.config_provision_id"],
        ),
        sa.ForeignKeyConstraint(
            ["input_type_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.PrimaryKeyConstraint("config_provision_id"),
        schema="dbo",
    )
    op.create_table(
        "config_provision_ui__select",
        sa.Column("config_provision_id", sa.Integer(), nullable=False),
        sa.Column("is_radio", sa.Boolean(), nullable=True),
        sa.Column(
            "default_config_provision_ui_select_item_id", sa.Integer(), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision_ui.config_provision_id"],
        ),
        sa.PrimaryKeyConstraint("config_provision_id"),
        schema="dbo",
    )
    op.create_table(
        "config_provision_ui__select_items",
        sa.Column("config_provision_ui_select_item_id", sa.Integer(), nullable=False),
        sa.Column("config_provision_id", sa.Integer(), nullable=True),
        sa.Column("item_code", sa.String(length=30), nullable=True),
        sa.Column("item_label", sa.String(length=100), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_provision_id"],
            ["dbo.config_provision_ui.config_provision_id"],
        ),
        sa.PrimaryKeyConstraint("config_provision_ui_select_item_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_provision_ui__select_items ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_provision_ui__select_items SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_provision_ui__select_items_history))"
    )
    op.create_table(
        "config_rate_table_set",
        sa.Column("config_rate_table_set_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_id", sa.Integer(), nullable=False),
        sa.Column("config_rate_table_set_label", sa.String(length=100), nullable=False),
        sa.Column(
            "age_distribution_set_id",
            sa.Integer(),
            nullable=True,
            comment="Default distribution of ages at issue",
        ),
        sa.Column(
            "rating_mapper_collection_id1",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id2",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id3",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id4",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id5",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column(
            "rating_mapper_collection_id6",
            sa.Integer(),
            nullable=True,
            comment="Indicates which rating mapper sets can be used with this product. Also specifies distributions.",
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["age_distribution_set_id"],
            ["dbo.config_age_distribution_set.config_age_distribution_set_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_benefit_id"],
            ["dbo.config_benefit.config_benefit_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id1"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id2"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id3"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id4"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id5"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_mapper_collection_id6"],
            ["dbo.config_rating_mapper_collection.config_rating_mapper_collection_id"],
        ),
        sa.PrimaryKeyConstraint("config_rate_table_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_rate_table_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_rate_table_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_rate_table_set_history))"
    )
    op.create_table(
        "selection_plan",
        sa.Column("selection_plan_id", sa.Integer(), nullable=False),
        sa.Column("config_product_id", sa.Integer(), nullable=True),
        sa.Column("selection_plan_effective_date", sa.Date(), nullable=False),
        sa.Column("situs_state_id", sa.Integer(), nullable=True),
        sa.Column("config_product_variation_state_id", sa.Integer(), nullable=True),
        sa.Column("selection_group_id", sa.Integer(), nullable=True),
        sa.Column("cloned_from_selection_plan_id", sa.Integer(), nullable=True),
        sa.Column("is_template", sa.Boolean(), nullable=True),
        sa.Column("plan_status", sa.Integer(), nullable=True),
        sa.Column(
            "plan_as_of_dts",
            mssql.DATETIME2(precision=7),
            nullable=False,
            comment="All configuration will be pulled as of this datetime. The goal is to set this date to a value immediately before the row_eff_dts of the first system-temporal record. In practice, it will be extremely rare for configuration to be updated concurrently with a plan that uses that configuration. Use the `get_db_current_timestamp` function to get the current timestamp from the database.",
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cloned_from_selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_product_id"],
            ["dbo.config_product.config_product_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_product_variation_state_id"],
            ["dbo.config_product_variation_state.config_product_variation_state_id"],
        ),
        sa.ForeignKeyConstraint(
            ["plan_status"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.ForeignKeyConstraint(
            ["situs_state_id"],
            ["dbo.ref_states.state_id"],
        ),
        sa.PrimaryKeyConstraint("selection_plan_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_plan ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_plan SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_plan_history))"
    )
    op.create_table(
        "config_benefit_auth_acl",
        sa.Column("config_benefit_auth_acl_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_auth_id", sa.Integer(), nullable=True),
        sa.Column("auth_role_code", sa.String(length=30), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_auth_id"],
            ["dbo.config_benefit_auth.config_benefit_auth_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_benefit_auth_acl_id"),
        schema="dbo",
        info={"rls": "user_role"},
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_auth_acl ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_auth_acl SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_auth_acl_history))"
    )
    op.execute(
        "CREATE SECURITY POLICY rls.policy_rls__config_benefit_auth_acl\n                ADD FILTER PREDICATE rls.fn_rls__user_role(auth_role_code) ON dbo.config_benefit_auth_acl\n                WITH (STATE = ON)"
    )
    op.create_table(
        "config_benefit_duration_detail",
        sa.Column("config_benefit_duration_detail_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_duration_set_id", sa.Integer(), nullable=True),
        sa.Column(
            "config_benefit_duration_detail_code", sa.String(length=30), nullable=False
        ),
        sa.Column(
            "config_benefit_duration_detail_label",
            sa.String(length=100),
            nullable=False,
        ),
        sa.Column(
            "config_benefit_duration_factor",
            sa.Numeric(precision=8, scale=5),
            nullable=False,
        ),
        sa.Column("is_restricted", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_duration_set_id"],
            ["dbo.config_benefit_duration_set.config_benefit_duration_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_benefit_duration_detail_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_duration_detail_history))"
    )
    op.create_table(
        "config_benefit_variation_state",
        sa.Column("config_benefit_variation_state_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_id", sa.Integer(), nullable=True),
        sa.Column("config_product_variation_state_id", sa.Integer(), nullable=True),
        sa.Column("state_id", sa.Integer(), nullable=True),
        sa.Column(
            "config_benefit_variation_state_effective_date", sa.Date(), nullable=False
        ),
        sa.Column(
            "config_benefit_variation_state_expiration_date", sa.Date(), nullable=False
        ),
        sa.Column("config_rate_table_set_id", sa.Integer(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint(
            "config_benefit_variation_state_effective_date <= config_benefit_variation_state_expiration_date"
        ),
        sa.ForeignKeyConstraint(
            ["config_benefit_id"],
            ["dbo.config_benefit.config_benefit_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["config_product_variation_state_id"],
            ["dbo.config_product_variation_state.config_product_variation_state_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["config_rate_table_set_id"],
            ["dbo.config_rate_table_set.config_rate_table_set_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["state_id"],
            ["dbo.ref_states.state_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.PrimaryKeyConstraint("config_benefit_variation_state_id"),
        sa.UniqueConstraint(
            "config_benefit_id",
            "config_product_variation_state_id",
            "config_benefit_variation_state_effective_date",
        ),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_variation_state ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_variation_state SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_variation_state_history))"
    )
    op.create_table(
        "config_rate_table",
        sa.Column("config_rate_table_id", sa.Integer(), nullable=False),
        sa.Column("config_rate_table_set_id", sa.Integer(), nullable=True),
        sa.Column("rating_age", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id1", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id2", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id3", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id4", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id5", sa.Integer(), nullable=True),
        sa.Column("rating_attr_id6", sa.Integer(), nullable=True),
        sa.Column("rate_per_unit", sa.Numeric(precision=12, scale=5), nullable=False),
        sa.Column("rate_frequency_id", sa.Integer(), nullable=False),
        sa.Column("rate_unit_value", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_rate_table_set_id"],
            ["dbo.config_rate_table_set.config_rate_table_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["rate_frequency_id"],
            ["dbo.ref_master.ref_id"],
        ),
        sa.ForeignKeyConstraint(
            ["rating_attr_id1"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["rating_attr_id2"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["rating_attr_id3"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["rating_attr_id4"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["rating_attr_id5"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["rating_attr_id6"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.PrimaryKeyConstraint("config_rate_table_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.config_rate_table ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_rate_table SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_rate_table_history))"
    )
    op.create_table(
        "selection_age_band",
        sa.Column("selection_age_band_id", sa.Integer(), nullable=False),
        sa.Column("selection_plan_id", sa.Integer(), nullable=True),
        sa.Column("age_band_lower", sa.Integer(), nullable=False),
        sa.Column("age_band_upper", sa.Integer(), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint("age_band_lower <= age_band_upper"),
        sa.ForeignKeyConstraint(
            ["selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_age_band_id"),
        sa.UniqueConstraint("selection_plan_id", "age_band_lower"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_age_band ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_age_band SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_age_band_history))"
    )
    with op.batch_alter_table("selection_age_band", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_age_band_selection_plan_id"),
            ["selection_plan_id"],
            unique=False,
        )

    op.create_table(
        "selection_coverage",
        sa.Column("selection_coverage_id", sa.Integer(), nullable=False),
        sa.Column("selection_plan_id", sa.Integer(), nullable=True),
        sa.Column("config_coverage_id", sa.Integer(), nullable=False),
        sa.Column("config_plan_design_set_id", sa.Integer(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_coverage_id"],
            ["dbo.config_coverage.config_coverage_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["config_plan_design_set_id"],
            ["dbo.config_plan_design_set.config_plan_design_set_id"],
            onupdate="SET NULL",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_coverage_id"),
        sa.UniqueConstraint("selection_plan_id", "config_coverage_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_coverage ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_coverage SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_coverage_history))"
    )
    with op.batch_alter_table("selection_coverage", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_coverage_selection_plan_id"),
            ["selection_plan_id"],
            unique=False,
        )

    op.create_table(
        "selection_plan_acl",
        sa.Column("selection_plan_acl_id", sa.Integer(), nullable=False),
        sa.Column("selection_plan_id", sa.Integer(), nullable=True),
        sa.Column("user_name", sa.String(length=100), nullable=True),
        sa.Column("role_name", sa.String(length=100), nullable=True),
        sa.Column("with_grant_option", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint("NOT (user_name IS NULL AND role_name IS NULL)"),
        sa.ForeignKeyConstraint(
            ["selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_plan_acl_id"),
        schema="dbo",
        info={"rls": "user_name"},
    )
    op.execute(
        "ALTER TABLE dbo.selection_plan_acl ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_plan_acl SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_plan_acl_history))"
    )
    op.execute(
        "CREATE SECURITY POLICY rls.policy_rls__selection_plan_acl\n                ADD FILTER PREDICATE rls.fn_rls__user_name(user_name) ON dbo.selection_plan_acl\n                WITH (STATE = ON)"
    )
    with op.batch_alter_table("selection_plan_acl", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_plan_acl_selection_plan_id"),
            ["selection_plan_id"],
            unique=False,
        )

    op.create_table(
        "selection_provision",
        sa.Column("selection_provision_id", sa.Integer(), nullable=False),
        sa.Column("selection_plan_id", sa.Integer(), nullable=True),
        sa.Column("config_provision_state_id", sa.Integer(), nullable=False),
        sa.Column("selection_value", sa.String(length=100), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_provision_state_id"],
            ["dbo.config_provision_state.config_provision_state_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_provision_id"),
        sa.UniqueConstraint("selection_plan_id", "config_provision_state_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_provision ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_provision SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_provision_history))"
    )
    with op.batch_alter_table("selection_provision", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_provision_selection_plan_id"),
            ["selection_plan_id"],
            unique=False,
        )

    op.create_table(
        "selection_rating_mapper_set",
        sa.Column("selection_rating_mapper_set_id", sa.Integer(), nullable=False),
        sa.Column("selection_plan_id", sa.Integer(), nullable=True),
        sa.Column(
            "selection_rating_mapper_set_type", sa.String(length=50), nullable=True
        ),
        sa.Column("config_rating_mapper_set_id", sa.Integer(), nullable=True),
        sa.Column("has_custom_weights", sa.Boolean(), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.CheckConstraint(
            "selection_rating_mapper_set_type IN ('selection_rating_mapper_set_id1', 'selection_rating_mapper_set_id2', 'selection_rating_mapper_set_id3', 'selection_rating_mapper_set_id4', 'selection_rating_mapper_set_id5', 'selection_rating_mapper_set_id6')"
        ),
        sa.ForeignKeyConstraint(
            ["config_rating_mapper_set_id"],
            ["dbo.config_rating_mapper_set.config_rating_mapper_set_id"],
            onupdate="SET NULL",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_rating_mapper_set_id"),
        sa.UniqueConstraint("selection_plan_id", "selection_rating_mapper_set_type"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_rating_mapper_set ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_rating_mapper_set SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_rating_mapper_set_history))"
    )
    with op.batch_alter_table("selection_rating_mapper_set", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_rating_mapper_set_selection_plan_id"),
            ["selection_plan_id"],
            unique=False,
        )

    op.create_table(
        "config_benefit_duration_detail_auth_acl",
        sa.Column(
            "config_benefit_duration_detail_auth_acl_id", sa.Integer(), nullable=False
        ),
        sa.Column("config_benefit_duration_detail_id", sa.Integer(), nullable=True),
        sa.Column("auth_role_code", sa.String(length=30), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_duration_detail_id"],
            ["dbo.config_benefit_duration_detail.config_benefit_duration_detail_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("config_benefit_duration_detail_auth_acl_id"),
        schema="dbo",
        info={"rls": "user_role"},
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_detail_auth_acl ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_detail_auth_acl SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.config_benefit_duration_detail_auth_acl_history))"
    )
    op.execute(
        "CREATE SECURITY POLICY rls.policy_rls__config_benefit_duration_detail_auth_acl\n                ADD FILTER PREDICATE rls.fn_rls__user_role(auth_role_code) ON dbo.config_benefit_duration_detail_auth_acl\n                WITH (STATE = ON)"
    )
    op.create_table(
        "selection_benefit",
        sa.Column("selection_benefit_id", sa.Integer(), nullable=False),
        sa.Column("selection_plan_id", sa.Integer(), nullable=True),
        sa.Column("selection_coverage_id", sa.Integer(), nullable=True),
        sa.Column("config_benefit_variation_state_id", sa.Integer(), nullable=False),
        sa.Column("selection_value", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_variation_state_id"],
            ["dbo.config_benefit_variation_state.config_benefit_variation_state_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["selection_coverage_id"],
            ["dbo.selection_coverage.selection_coverage_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
        ),
        sa.PrimaryKeyConstraint("selection_benefit_id"),
        sa.UniqueConstraint("selection_plan_id", "config_benefit_variation_state_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_benefit ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_benefit SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_benefit_history))"
    )
    with op.batch_alter_table("selection_benefit", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_benefit_selection_coverage_id"),
            ["selection_coverage_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_benefit_selection_plan_id"),
            ["selection_plan_id"],
            unique=False,
        )

    op.create_table(
        "selection_factor",
        sa.Column("selection_factor_id", sa.Integer(), nullable=False),
        sa.Column("selection_provision_id", sa.Integer(), nullable=True),
        sa.Column("config_factor_set_id", sa.Integer(), nullable=True),
        sa.Column("config_factor_id", sa.Integer(), nullable=True),
        sa.Column("selection_rate_table_age_value", sa.Integer(), nullable=True),
        sa.Column("selection_rating_attr_id1", sa.Integer(), nullable=True),
        sa.Column("selection_rating_attr_id2", sa.Integer(), nullable=True),
        sa.Column("selection_rating_attr_id3", sa.Integer(), nullable=True),
        sa.Column("selection_rating_attr_id4", sa.Integer(), nullable=True),
        sa.Column("selection_rating_attr_id5", sa.Integer(), nullable=True),
        sa.Column("selection_rating_attr_id6", sa.Integer(), nullable=True),
        sa.Column(
            "selection_factor_value", sa.Numeric(precision=8, scale=5), nullable=True
        ),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_factor_id"],
            ["dbo.config_factor.config_factor_id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_factor_set_id"],
            ["dbo.config_factor_set.config_factor_set_id"],
        ),
        sa.ForeignKeyConstraint(
            ["selection_provision_id"],
            ["dbo.selection_provision.selection_provision_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_factor_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_factor ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_factor SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_factor_history))"
    )
    with op.batch_alter_table("selection_factor", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_factor_selection_provision_id"),
            ["selection_provision_id"],
            unique=False,
        )

    op.create_table(
        "selection_rating_mapper_detail",
        sa.Column("selection_rating_mapper_detail_id", sa.Integer(), nullable=False),
        sa.Column("selection_rating_mapper_set_id", sa.Integer(), nullable=True),
        sa.Column("config_rating_mapper_detail_id", sa.Integer(), nullable=True),
        sa.Column("rate_table_attribute_detail_id", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id", sa.Integer(), nullable=True),
        sa.Column("default_weight", sa.Numeric(precision=8, scale=5), nullable=True),
        sa.Column("weight", sa.Numeric(precision=8, scale=5), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_rating_mapper_detail_id"],
            ["dbo.config_rating_mapper_detail.config_rating_mapper_detail_id"],
            onupdate="SET NULL",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["output_attribute_detail_id"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["rate_table_attribute_detail_id"],
            ["dbo.config_attr_detail.config_attr_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["selection_rating_mapper_set_id"],
            ["dbo.selection_rating_mapper_set.selection_rating_mapper_set_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_rating_mapper_detail_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_rating_mapper_detail ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_rating_mapper_detail SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_rating_mapper_detail_history))"
    )
    with op.batch_alter_table(
        "selection_rating_mapper_detail", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f(
                "ix_dbo_selection_rating_mapper_detail_selection_rating_mapper_set_id"
            ),
            ["selection_rating_mapper_set_id"],
            unique=False,
        )

    op.create_table(
        "selection_benefit_duration",
        sa.Column("selection_benefit_duration_id", sa.Integer(), nullable=False),
        sa.Column("selection_benefit_id", sa.Integer(), nullable=True),
        sa.Column("config_benefit_duration_set_id", sa.Integer(), nullable=False),
        sa.Column("config_benefit_duration_detail_id", sa.Integer(), nullable=False),
        sa.Column("selection_factor", sa.Numeric(precision=8, scale=5), nullable=True),
        sa.Column("version_id", sa.String(length=26), nullable=True),
        sa.Column(
            "created_dts",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.Column("row_eff_dts", mssql.DATETIME2(), nullable=False),
        sa.Column("row_exp_dts", mssql.DATETIME2(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_benefit_duration_detail_id"],
            ["dbo.config_benefit_duration_detail.config_benefit_duration_detail_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["config_benefit_duration_set_id"],
            ["dbo.config_benefit_duration_set.config_benefit_duration_set_id"],
            onupdate="NO ACTION",
            ondelete="NO ACTION",
        ),
        sa.ForeignKeyConstraint(
            ["selection_benefit_id"],
            ["dbo.selection_benefit.selection_benefit_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("selection_benefit_duration_id"),
        sa.UniqueConstraint("selection_benefit_id", "config_benefit_duration_set_id"),
        schema="dbo",
    )
    op.execute(
        "ALTER TABLE dbo.selection_benefit_duration ADD PERIOD FOR SYSTEM_TIME (row_eff_dts, row_exp_dts)"
    )
    op.execute(
        "ALTER TABLE dbo.selection_benefit_duration SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE=dbo.selection_benefit_duration_history))"
    )
    with op.batch_alter_table("selection_benefit_duration", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_benefit_duration_selection_benefit_id"),
            ["selection_benefit_id"],
            unique=False,
        )

    op.create_table(
        "selection_benefit_rate",
        sa.Column("selection_benefit_rate_id", sa.Integer(), nullable=False),
        sa.Column("selection_benefit_id", sa.Integer(), nullable=True),
        sa.Column("selection_plan_id", sa.Integer(), nullable=True),
        sa.Column("selection_age_band_id", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id1", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id2", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id3", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id4", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id5", sa.Integer(), nullable=True),
        sa.Column("output_attribute_detail_id6", sa.Integer(), nullable=True),
        sa.Column("rate_value", sa.Numeric(precision=12, scale=5), nullable=True),
        sa.Column("row_hash", sa.VARBINARY(length=40), nullable=True),
        sa.Column("created_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_dts", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["selection_age_band_id"],
            ["dbo.selection_age_band.selection_age_band_id"],
        ),
        sa.ForeignKeyConstraint(
            ["selection_benefit_id"],
            ["dbo.selection_benefit.selection_benefit_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["selection_plan_id"],
            ["dbo.selection_plan.selection_plan_id"],
        ),
        sa.PrimaryKeyConstraint("selection_benefit_rate_id"),
        schema="dbo",
    )
    with op.batch_alter_table("selection_benefit_rate", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_benefit_rate_selection_age_band_id"),
            ["selection_age_band_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_benefit_rate_selection_benefit_id"),
            ["selection_benefit_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_dbo_selection_benefit_rate_selection_plan_id"),
            ["selection_plan_id"],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("selection_benefit_rate", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_dbo_selection_benefit_rate_selection_plan_id")
        )
        batch_op.drop_index(
            batch_op.f("ix_dbo_selection_benefit_rate_selection_benefit_id")
        )
        batch_op.drop_index(
            batch_op.f("ix_dbo_selection_benefit_rate_selection_age_band_id")
        )

    op.drop_table("selection_benefit_rate", schema="dbo")
    with op.batch_alter_table("selection_benefit_duration", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_dbo_selection_benefit_duration_selection_benefit_id")
        )

    op.execute(
        "ALTER TABLE dbo.selection_benefit_duration SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.selection_benefit_duration_history")
    op.drop_table("selection_benefit_duration", schema="dbo")
    with op.batch_alter_table(
        "selection_rating_mapper_detail", schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f(
                "ix_dbo_selection_rating_mapper_detail_selection_rating_mapper_set_id"
            )
        )

    op.execute(
        "ALTER TABLE dbo.selection_rating_mapper_detail SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.selection_rating_mapper_detail_history")
    op.drop_table("selection_rating_mapper_detail", schema="dbo")
    with op.batch_alter_table("selection_factor", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_dbo_selection_factor_selection_provision_id")
        )

    op.execute("ALTER TABLE dbo.selection_factor SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.selection_factor_history")
    op.drop_table("selection_factor", schema="dbo")
    with op.batch_alter_table("selection_benefit", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_dbo_selection_benefit_selection_plan_id"))
        batch_op.drop_index(
            batch_op.f("ix_dbo_selection_benefit_selection_coverage_id")
        )

    op.execute("ALTER TABLE dbo.selection_benefit SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.selection_benefit_history")
    op.drop_table("selection_benefit", schema="dbo")
    op.execute(
        "DROP SECURITY POLICY rls.policy_rls__config_benefit_duration_detail_auth_acl"
    )
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_detail_auth_acl SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_benefit_duration_detail_auth_acl_history")
    op.drop_table("config_benefit_duration_detail_auth_acl", schema="dbo")
    with op.batch_alter_table("selection_rating_mapper_set", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_dbo_selection_rating_mapper_set_selection_plan_id")
        )

    op.execute(
        "ALTER TABLE dbo.selection_rating_mapper_set SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.selection_rating_mapper_set_history")
    op.drop_table("selection_rating_mapper_set", schema="dbo")
    with op.batch_alter_table("selection_provision", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_dbo_selection_provision_selection_plan_id"))

    op.execute("ALTER TABLE dbo.selection_provision SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.selection_provision_history")
    op.drop_table("selection_provision", schema="dbo")
    with op.batch_alter_table("selection_plan_acl", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_dbo_selection_plan_acl_selection_plan_id"))

    op.execute("DROP SECURITY POLICY rls.policy_rls__selection_plan_acl")
    op.execute("ALTER TABLE dbo.selection_plan_acl SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.selection_plan_acl_history")
    op.drop_table("selection_plan_acl", schema="dbo")
    with op.batch_alter_table("selection_coverage", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_dbo_selection_coverage_selection_plan_id"))

    op.execute("ALTER TABLE dbo.selection_coverage SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.selection_coverage_history")
    op.drop_table("selection_coverage", schema="dbo")
    with op.batch_alter_table("selection_age_band", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_dbo_selection_age_band_selection_plan_id"))

    op.execute("ALTER TABLE dbo.selection_age_band SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.selection_age_band_history")
    op.drop_table("selection_age_band", schema="dbo")
    op.execute("ALTER TABLE dbo.config_rate_table SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_rate_table_history")
    op.drop_table("config_rate_table", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_benefit_variation_state SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_benefit_variation_state_history")
    op.drop_table("config_benefit_variation_state", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_detail SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_benefit_duration_detail_history")
    op.drop_table("config_benefit_duration_detail", schema="dbo")
    op.execute("DROP SECURITY POLICY rls.policy_rls__config_benefit_auth_acl")
    op.execute(
        "ALTER TABLE dbo.config_benefit_auth_acl SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_benefit_auth_acl_history")
    op.drop_table("config_benefit_auth_acl", schema="dbo")
    op.execute("ALTER TABLE dbo.selection_plan SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.selection_plan_history")
    op.drop_table("selection_plan", schema="dbo")
    op.execute("ALTER TABLE dbo.config_rate_table_set SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_rate_table_set_history")
    op.drop_table("config_rate_table_set", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_provision_ui__select_items SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_provision_ui__select_items_history")
    op.drop_table("config_provision_ui__select_items", schema="dbo")
    op.drop_table("config_provision_ui__select", schema="dbo")
    op.drop_table("config_provision_ui__input", schema="dbo")
    op.drop_table("config_provision_ui__checkbox", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_plan_design_variation_state SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_plan_design_variation_state_history")
    op.drop_table("config_plan_design_variation_state", schema="dbo")
    op.execute("ALTER TABLE dbo.config_factor_rule SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_factor_rule_history")
    op.drop_table("config_factor_rule", schema="dbo")
    op.execute("ALTER TABLE dbo.config_factor SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_factor_history")
    op.drop_table("config_factor", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_benefit_provision SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_benefit_provision_history")
    op.drop_table("config_benefit_provision", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_benefit_duration_set SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_benefit_duration_set_history")
    op.drop_table("config_benefit_duration_set", schema="dbo")
    op.execute("ALTER TABLE dbo.config_benefit_auth SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_benefit_auth_history")
    op.drop_table("config_benefit_auth", schema="dbo")
    op.execute("ALTER TABLE dbo.config_provision_ui SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_provision_ui_history")
    op.drop_table("config_provision_ui", schema="dbo")
    op.execute("ALTER TABLE dbo.config_provision_state SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_provision_state_history")
    op.drop_table("config_provision_state", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_product_variation_state SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_product_variation_state_history")
    op.drop_table("config_product_variation_state", schema="dbo")
    op.execute("ALTER TABLE dbo.config_factor_set SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_factor_set_history")
    op.drop_table("config_factor_set", schema="dbo")
    op.execute("ALTER TABLE dbo.config_benefit SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_benefit_history")
    op.drop_table("config_benefit", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_detail SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_rating_mapper_detail_history")
    op.drop_table("config_rating_mapper_detail", schema="dbo")
    op.execute("ALTER TABLE dbo.config_rate_group SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_rate_group_history")
    op.drop_table("config_rate_group", schema="dbo")
    op.execute("ALTER TABLE dbo.config_provision SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_provision_history")
    op.drop_table("config_provision", schema="dbo")
    with op.batch_alter_table("config_product_variation", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_dbo_config_product_variation_config_product_id")
        )

    op.execute(
        "ALTER TABLE dbo.config_product_variation SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_product_variation_history")
    op.drop_table("config_product_variation", schema="dbo")
    op.execute("ALTER TABLE dbo.config_product_state SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_product_state_history")
    op.drop_table("config_product_state", schema="dbo")
    op.execute("ALTER TABLE dbo.config_coverage SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_coverage_history")
    op.drop_table("config_coverage", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_set SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_rating_mapper_set_history")
    op.drop_table("config_rating_mapper_set", schema="dbo")
    op.execute("ALTER TABLE dbo.config_product SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_product_history")
    op.drop_table("config_product", schema="dbo")
    op.execute("DROP SECURITY POLICY rls.policy_rls__config_dropdown_detail_acl")
    op.execute(
        "ALTER TABLE dbo.config_dropdown_detail_acl SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_dropdown_detail_acl_history")
    op.drop_table("config_dropdown_detail_acl", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_rating_mapper_collection SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_rating_mapper_collection_history")
    op.drop_table("config_rating_mapper_collection", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_plan_design_detail SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_plan_design_detail_history")
    op.drop_table("config_plan_design_detail", schema="dbo")
    op.execute("ALTER TABLE dbo.config_dropdown_detail SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_dropdown_detail_history")
    op.drop_table("config_dropdown_detail", schema="dbo")
    op.execute("ALTER TABLE dbo.config_attr_detail SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_attr_detail_history")
    op.drop_table("config_attr_detail", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_age_distribution_detail SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_age_distribution_detail_history")
    op.drop_table("config_age_distribution_detail", schema="dbo")
    op.execute("ALTER TABLE dbo.config_age_band_detail SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_age_band_detail_history")
    op.drop_table("config_age_band_detail", schema="dbo")
    op.drop_table("auth_user_role", schema="auth")
    op.drop_table("auth_role_permission", schema="auth")
    op.drop_table("testtbl", schema="dbo")
    op.execute("ALTER TABLE dbo.ref_states SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.ref_states_history")
    op.drop_table("ref_states", schema="dbo")
    op.execute("ALTER TABLE dbo.ref_master SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.ref_master_history")
    op.drop_table("ref_master", schema="dbo")
    op.drop_table("event_log", schema="dbo")
    op.execute("ALTER TABLE dbo.config_plan_design_set SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_plan_design_set_history")
    op.drop_table("config_plan_design_set", schema="dbo")
    op.execute("ALTER TABLE dbo.config_dropdown_set SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_dropdown_set_history")
    op.drop_table("config_dropdown_set", schema="dbo")
    op.execute("ALTER TABLE dbo.config_attr_set SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_attr_set_history")
    op.drop_table("config_attr_set", schema="dbo")
    op.execute(
        "ALTER TABLE dbo.config_age_distribution_set SET ( SYSTEM_VERSIONING = OFF )"
    )
    op.execute("DROP TABLE dbo.config_age_distribution_set_history")
    op.drop_table("config_age_distribution_set", schema="dbo")
    op.execute("ALTER TABLE dbo.config_age_band_set SET ( SYSTEM_VERSIONING = OFF )")
    op.execute("DROP TABLE dbo.config_age_band_set_history")
    op.drop_table("config_age_band_set", schema="dbo")
    op.drop_table("auth_user_password_history", schema="auth")
    op.drop_table("auth_user", schema="auth")
    op.drop_table("auth_role", schema="auth")
    op.drop_table("auth_permission", schema="auth")
    # ### end Alembic commands ###
