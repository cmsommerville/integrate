version: '3.7'
name: integrate
services:
  db:
    container_name: db
    user: root
    build: ./db
    ports:
      - "1434:${DATABASE_PORT}"
    env_file: 
      - .env
    volumes:
      - integrate-mssql:/var/opt/mssql/data
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U $UID_APPLICATION -P $PWD_APPLICATION -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
  redis:
    container_name: redis
    build: ./redis
    ports: 
      - "6380:${REDIS_PORT}"
    env_file: 
      - .env
  api:
    container_name: api
    build: ./api
    ports:
      - "5001:${API_PORT}"
    env_file: 
      - .env
    depends_on:
      db: 
        condition: service_healthy
      redis:
        condition: service_started
    volumes: 
      - ./api:/api
  celery_worker:
    container_name: celery_worker
    build:
      context: ./api
    entrypoint: celery
    command: -A app.celery_app.celery worker --loglevel=info
    env_file: 
      - .env
    volumes:
      - ./api:/app
    links:
      - redis
    depends_on:
      db: 
        condition: service_healthy
      redis:
        condition: service_started
  celery_dashboard:
    container_name: celery_dashboard
    build:
      context: ./api
    command: celery --app app.celery_app.celery flower --port=5555 --broker=$CELERY_BROKER_URL
    ports:
      - 5556:5555
    env_file: 
      - .env
    depends_on:
      api: 
        condition: service_started
      celery_worker:
        condition: service_started
      redis:
        condition: service_started
volumes:
  integrate-mssql: